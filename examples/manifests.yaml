---
apiVersion: v1
kind: Namespace
metadata:
  name: crlish-authorizer
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: v1.32

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: crlish-authorizer
  name: crlish-authorizer
data:
  credential_ids.json: |
    [
      "X509SHA256=07123e1f482356c415f684407a3b8723e10b2cbbc0b8fcd6282c49d37c9c1abc",
      "X509SHA256=0ebe2eca800cf7bd9d9d9f9f4aafbc0c77ae155f43bbbeca69cb256a24c7f9bb",
      "JTI=1234"
    ]  

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: crlish-authorizer
  name: crlish-authorizer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crlish-authorizer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crlish-authorizer
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - crlish-authorizer
      priorityClassName: system-cluster-critical
      volumes:
        - name: x509
          secret:
            secretName: crlish-authorizer
        - name: conf
          configMap:
            name: crlish-authorizer
      containers:
        - name: server
          image: ghcr.io/menacit/k8s_crlish_authorizer:latest
          args:
            - -verbose=true
          ports:
            - name: crlish-api
              containerPort: 8443
          volumeMounts:
            - name: x509
              mountPath: /etc/k8s_crlish_authorizer/x509
            - name: conf
              mountPath: /etc/k8s_crlish_authorizer/conf
          startupProbe:
            initialDelaySeconds: 3
            periodSeconds: 2
            timeoutSeconds: 2
            failureThreshold: 10
            httpGet:
              port: crlish-api
              scheme: HTTPS
              path: /healthz
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 5
            httpGet:
              port: crlish-api
              scheme: HTTPS
              path: /healthz
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 2
            timeoutSeconds: 2
            failureThreshold: 3
            httpGet:
              port: crlish-api
              scheme: HTTPS
              path: /healthz
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              memory: 250Mi
              cpu: 250m

---
apiVersion: v1
kind: Service                                        
metadata:
  namespace: crlish-authorizer
  name: crlish-authorizer
spec:
  trafficDistribution: PreferClose
  selector:
    app.kubernetes.io/name: crlish-authorizer
  ports:
    - port: 443
      targetPort: crlish-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: crlish-authorizer
  name: crlish-authorizer
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: crlish-authorizer
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - ports:
        - port: crlish-api
      from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              tier: control-plane
              component: kube-apiserver
  egress: []
